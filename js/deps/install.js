// Generated by CoffeeScript 1.12.4
var exec, fs, path, sync;

fs = require("io/sync");

exec = require("exec");

path = require("path");

sync = require("sync");

module.exports = function(args) {
  var manifest, manifestPath, modulePath;
  modulePath = args._.length ? path.resolve(args._[0]) : process.cwd();
  manifestPath = path.join(modulePath, "manifest.json");
  if (fs.exists(manifestPath)) {
    manifest = require(manifestPath);
  } else {
    log.warn("'install-deps' uses the manifest, please call 'read-deps' first!");
    return;
  }
  return sync.each(manifest, function(depJson, depPath) {
    if (path.isAbsolute(depPath)) {
      return;
    }
    return sync.each(depJson.dependers, function(parentPath) {
      var error, green, installedPath, yellow;
      installedPath = path.join(parentPath, "node_modules", depPath);
      if (fs.exists(installedPath)) {
        if (!args.refresh) {
          return;
        }
        if (fs.isLink(installedPath)) {
          return;
        }
        yellow = log.color.yellow;
        log.moat(1);
        log.white("Reinstalling:\n  " + (yellow(installedPath)));
        log.moat(1);
        log.flush();
        fs.remove(installedPath);
      } else {
        green = log.color.green;
        log.moat(1);
        log.white("Installing:\n  " + (green(installedPath)));
        log.moat(1);
        log.flush();
      }
      try {
        exec.sync("npm install " + depPath, {
          cwd: parentPath
        });
      } catch (error1) {
        error = error1;
        if (!/WARN/.test(error.message)) {
          throw error;
        }
      }
    });
  });
};
